# custom IntelliJ IDEA VM options

-Xms2g
-Xmx4g
-XX:ReservedCodeCacheSize=240m

-XX:SoftRefLRUPolicyMSPerMB=50
-ea
-Dsun.io.useCanonCaches=false
-Djava.net.preferIPv4Stack=true
-XX:+HeapDumpOnOutOfMemoryError
-XX:-OmitStackTraceInFastThrow
-Dawt.useSystemAAFontSettings=lcd
-Dsun.java2d.renderer=sun.java2d.marlin.MarlinRenderingEngine

# The potential advantage of this approach is that the young generation will grow and shrink automatically when the JVM dynamically adjusts the total heap size at run time.
# Use this if the projects you work with vary drastically in their memory usage.
# I recommend a ratio between 2 and 4. This means the young generation will be 1/3 or 1/4 the size of the old generation.
# -XX:NewRatio=2

# Introduced in JDK 7 Update 4 G1 is similar to CMS but is built to support large heaps (4GB and larger).
# It breaks up the generations into smaller regions and keeps tracks of regions that produce more garbage.
# This is supposed to prevent large "stop the world" GC events that can occur in large heaps.
-XX:+UseG1GC
-XX:-UseParNewGC
-XX:-UseConcMarkSweepGC
-XX:SurvivorRatio=8

# These are minor changes and will not affect the rest of your configuration. Not a necessary flag but may see some performance improvements.
# Keep in mind the changes this flag turns on change for each java release so make sure to re-evaluate when/if Intellij changes the version of Java packaged with Intellij!
-XX:+AggressiveOpts
# Turns on some peformance optimizations that are expected to be on by default in upcoming releases.